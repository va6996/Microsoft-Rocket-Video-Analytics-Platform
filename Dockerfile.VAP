FROM ycshu086/ubuntu-dotnetcore-opencv-opencvsharp-cuda-cudnn:0.1 AS build-env

WORKDIR /app

# Copy csproj and restore as distinct layers
COPY ./eng/Versions.props ./eng/Versions.props
COPY ./src/Directory.Build.props ./src/Directory.Build.props
COPY ./src/Directory.Build.targets ./src/Directory.Build.targets
COPY ./src/VAP/AML.Client/*.csproj ./src/VAP/AML.Client/
COPY ./src/VAP/AML.tfserving/*.csproj ./src/VAP/AML.tfserving/
COPY ./src/VAP/BGSObjectDetector/*.csproj ./src/VAP/BGSObjectDetector/
COPY ./src/VAP/Decoder/*.csproj ./src/VAP/Decoder/
COPY ./src/VAP/ORTWrapper/*.csproj ./src/VAP/ORTWrapper/
COPY ./src/VAP/DarknetDetector/*.csproj ./src/VAP/DarknetDetector/
COPY ./src/VAP/DNNDetector/ ./src/VAP/DNNDetector/
COPY ./src/VAP/FramePreProcessor/*.csproj ./src/VAP/FramePreProcessor/
COPY ./src/VAP/LineDetector/*.csproj ./src/VAP/LineDetector/
COPY ./src/VAP/PostProcessor/*.csproj ./src/VAP/PostProcessor/
COPY ./src/VAP/TFDetector/*.csproj ./src/VAP/TFDetector/
COPY ./src/VAP/TFWrapper/*.csproj ./src/VAP/TFWrapper/
COPY ./src/VAP/Utils/*.csproj ./src/VAP/Utils/
COPY ./src/VAP/VideoPipelineCore/*.csproj ./src/VAP/VideoPipelineCore/
COPY ./src/VAP/YoloWrapper/*.csproj ./src/VAP/YoloWrapper/
RUN dotnet restore ./src/VAP/AML.tfserving/
RUN dotnet restore ./src/VAP/AML.Client/
RUN dotnet restore ./src/VAP/BGSObjectDetector/
RUN dotnet restore ./src/VAP/Decoder/
RUN dotnet restore ./src/VAP/DNNDetector/
RUN dotnet restore ./src/VAP/FramePreProcessor/
RUN dotnet restore ./src/VAP/PostProcessor/
RUN dotnet restore ./src/VAP/LineDetector/
RUN dotnet restore ./src/VAP/TFDetector/
RUN dotnet restore ./src/VAP/TFWrapper/
RUN dotnet restore ./src/VAP/Utils/
RUN dotnet restore ./src/VAP/VideoPipelineCore/
RUN dotnet restore ./src/VAP/ORTWrapper/
RUN dotnet restore ./src/VAP/DarknetDetector/
RUN dotnet restore ./src/VAP/YoloWrapper/

# Copy everything else and build
COPY ./src/VAP/AML.Client/ ./src/VAP/AML.Client/
COPY ./src/VAP/AML.tfserving/ ./src/VAP/AML.tfserving/
COPY ./src/VAP/BGSObjectDetector/ ./src/VAP/BGSObjectDetector/
COPY ./src/VAP/Decoder/ ./src/VAP/Decoder/
COPY ./src/VAP/DNNDetector/ ./src/VAP/DNNDetector/
COPY ./src/VAP/ORTWrapper/ ./src/VAP/ORTWrapper/
COPY ./src/VAP/DarknetDetector/ ./src/VAP/DarknetDetector/
COPY ./src/VAP/FramePreProcessor/ ./src/VAP/FramePreProcessor/
COPY ./src/VAP/LineDetector/ ./src/VAP/LineDetector/
COPY ./src/VAP/PostProcessor/ ./src/VAP/PostProcessor/
COPY ./src/VAP/TFDetector/ ./src/VAP/TFDetector/
COPY ./src/VAP/TFWrapper/ ./src/VAP/TFWrapper/
COPY ./src/VAP/Utils/ ./src/VAP/Utils/
COPY ./src/VAP/VideoPipelineCore/ ./src/VAP/VideoPipelineCore/
COPY ./src/VAP/YoloWrapper/ ./src/VAP/YoloWrapper/
COPY ./cfg/imagenet-classes.json ./cfg/imagenet-classes.json

RUN dotnet publish ./src/VAP/Utils/ -c Release -o out
RUN dotnet publish ./src/VAP/TFWrapper/ -c Release -o out
RUN dotnet publish ./src/VAP/DNNDetector/ -c Release -o out
RUN dotnet publish ./src/VAP/BGSObjectDetector/ -c Release -o out
RUN dotnet publish ./src/VAP/AML.tfserving/ -c Release -o out
RUN dotnet publish ./src/VAP/TFDetector/ -c Release -o out
RUN dotnet publish ./src/VAP/Decoder/ -c Release -o out
RUN dotnet publish ./src/VAP/FramePreProcessor/ -c Release -o out
RUN dotnet publish ./src/VAP/AML.Client/ -c Release -o out
RUN dotnet publish ./src/VAP/PostProcessor/ -c Release -o out
RUN dotnet publish ./src/VAP/LineDetector/ -c Release -o out
RUN dotnet publish ./src/VAP/VideoPipelineCore/ -c Release -o out
RUN dotnet publish ./src/VAP/ORTWrapper/ -c Release -o out
RUN dotnet publish ./src/VAP/DarknetDetector/ -c Release -o out
RUN dotnet publish ./src/VAP/YoloWrapper/ -c Release -o out

# Build runtime image
FROM ycshu086/ubuntu-dotnetcore-opencv-opencvsharp-cuda-cudnn:0.1
WORKDIR /app
COPY --from=build-env /app/src/VAP/Utils/out .
COPY --from=build-env /app/src/VAP/TFWrapper/out .
COPY --from=build-env /app/src/VAP/DNNDetector/out .
COPY --from=build-env /app/src/VAP/BGSObjectDetector/out .
COPY --from=build-env /app/src/VAP/AML.tfserving/out .
COPY --from=build-env /app/src/VAP/TFDetector/out .
COPY --from=build-env /app/src/VAP/Decoder/out .
COPY --from=build-env /app/src/VAP/PostProcessor/out .
COPY --from=build-env /app/src/VAP/LineDetector/out .
COPY --from=build-env /app/src/VAP/FramePreProcessor/out .
COPY --from=build-env /app/src/VAP/AML.Client/out .
COPY --from=build-env /app/src/VAP/VideoPipelineCore/out .
COPY --from=build-env /app/src/VAP/ORTWrapper/out .
COPY --from=build-env /app/src/VAP/DarknetDetector/out .
COPY --from=build-env /app/src/VAP/YoloWrapper/out .
COPY ./cfg ./cfg
COPY ./media ./media
COPY ./modelOnnx ./modelOnnx
COPY ./src/VAP/TFWrapper/packages/TensorFlowSharp.1.12.0/runtimes/linux/native/libtensorflow.so /usr/local/lib
COPY ./src/VAP/TFWrapper/packages/TensorFlowSharp.1.12.0/runtimes/linux/native/libtensorflow.so .
COPY ./src/VAP/TFWrapper/packages/TensorFlowSharp.1.12.0/runtimes/linux/native/libtensorflow_framework.so /usr/local/lib
COPY ./src/VAP/TFWrapper/packages/TensorFlowSharp.1.12.0/runtimes/linux/native/libtensorflow_framework.so .
RUN cp /opencvsharp/make/OpenCvSharpExtern/libOpenCvSharpExtern.so /usr/local/lib
RUN cp /opencvsharp/make/OpenCvSharpExtern/libOpenCvSharpExtern.so .
RUN apt-get update && apt-get install -y --no-install-recommends apt-utils && apt-get install -y libgdiplus
RUN cd /usr/lib
RUN ln -s libgdiplus.so gdiplus.dll
RUN export LD_LIBRARY_PATH="/lib:/usr/lib:/usr/local/lib"

ENTRYPOINT ["dotnet", "VideoPipelineCore.dll"]
